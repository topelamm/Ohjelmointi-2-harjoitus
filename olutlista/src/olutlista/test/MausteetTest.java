package olutlista.test;
// Generated by ComTest BEGIN
import olutlista.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

import kayttamattomat.Mauste;
import kayttamattomat.Mausteet;

/**
 * Test class made by ComTest
 * @version 2020.07.29 17:17:22 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class MausteetTest {



  // Generated by ComTest BEGIN
  /** testIterator70 */
  @Test
  public void testIterator70() {    // Mausteet: 70
    Mausteet mausteet = new Mausteet(); 
    Mauste bisse = new Mauste(2,2); mausteet.lisaa(bisse); 
    Mauste bisse2 = new Mauste(1,1); mausteet.lisaa(bisse2); 
    Mauste bisse3 = new Mauste(2,2); mausteet.lisaa(bisse3); 
    Mauste bisse4 = new Mauste(1,1); mausteet.lisaa(bisse4); 
    Mauste bisse5 = new Mauste(2,2); mausteet.lisaa(bisse5); 
    Iterator<Mauste> i2=mausteet.iterator(); 
    assertEquals("From: Mausteet line: 83", bisse, i2.next()); 
    assertEquals("From: Mausteet line: 84", bisse2, i2.next()); 
    assertEquals("From: Mausteet line: 85", bisse3, i2.next()); 
    assertEquals("From: Mausteet line: 86", bisse4, i2.next()); 
    assertEquals("From: Mausteet line: 87", bisse5, i2.next()); 
    try {
    assertEquals("From: Mausteet line: 88", bisse4, i2.next()); 
    fail("Mausteet: 88 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int jnrot[] = { 2,1,2,1,2} ; 
    for ( Mauste mau : mausteet ) {
    assertEquals("From: Mausteet line: 94", jnrot[n], mau.getOlutNro()); n++; 
    }
    assertEquals("From: Mausteet line: 97", 5, n); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaMausteet111 */
  @Test
  public void testAnnaMausteet111() {    // Mausteet: 111
    Mausteet mausteet = new Mausteet(); 
    Mauste bisse = new Mauste(2,2); mausteet.lisaa(bisse); 
    Mauste bisse2 = new Mauste(1,1); mausteet.lisaa(bisse2); 
    Mauste bisse3 = new Mauste(2,2); mausteet.lisaa(bisse3); 
    Mauste bisse4 = new Mauste(1,1); mausteet.lisaa(bisse4); 
    Mauste bisse5 = new Mauste(2,2); mausteet.lisaa(bisse5); 
    List<Mauste> loytyneet; 
    loytyneet = mausteet.annaMausteet(3); 
    assertEquals("From: Mausteet line: 123", 0, loytyneet.size()); 
    loytyneet = mausteet.annaMausteet(1); 
    assertEquals("From: Mausteet line: 125", 2, loytyneet.size()); 
    assertEquals("From: Mausteet line: 126", true, loytyneet.get(0) == bisse2); 
    assertEquals("From: Mausteet line: 127", true, loytyneet.get(1) == bisse4); 
  } // Generated by ComTest END
}